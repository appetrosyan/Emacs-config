;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Jul 10 02:26:55 2018
;; Desktop file format version 208
;; Emacs version 25.1.1
(setq revive:frame-configuration-to-restore
  '(progn 
     (revive:restore-frame '((tool-bar-position . top) (explicit-name) (visibility . t) (icon-name) (bottom-divider-width . 0) (right-divider-width . 0) (top . 22) (left . 0) (unsplittable) (modeline . t) (width . 80) (height . 36) (cursor-color . "Red") (background-mode . light) (fringe) (fullscreen) (alpha) (scroll-bar-height . 0) (scroll-bar-width . 15) (cursor-type . box) (auto-lower) (auto-raise) (icon-type) (title) (buffer-predicate) (tool-bar-lines . 1) (menu-bar-lines . 1) (right-fringe . 8) (left-fringe . 1) (line-spacing) (background-color . "White") (foreground-color . "Black") (horizontal-scroll-bars) (vertical-scroll-bars . right) (internal-border-width . 0) (border-width . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (fontsize . 0)) '(80 36 ((0 0 83 35)) ((nil "untitled" 1 1 nil))))))

;; Global section:
(setq desktop-saved-frameset [frameset 1 (23363 57647 68114 0) (desktop . "208") "app@appmbp" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "Black") (background-color . "White") (line-spacing) (left-fringe . 1) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (fringe) (display-type . color) (background-mode . light) (cursor-color . "Red") (frameset--id . "42B4-BB83-6731-24B8") (frameset--mini t) (height . 36) (width . 80) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 22) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (visibility . t) (display . "appmbp") (explicit-name) (tool-bar-position . top)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 64) (min-pixel-width . 70) (min-pixel-height-ignore . 32) (min-pixel-width-ignore . 38) (min-pixel-height-safe . 16) (min-pixel-width-safe . 14)) leaf (pixel-width . 584) (pixel-height . 560) (total-width . 83) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (buffer "untitled" (selected . t) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "Black") (background-color . "White") (line-spacing) (left-fringe . 1) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (fringe) (display-type . color) (background-mode . light) (cursor-color . "Red") (visibility) (frameset--id . "35EE-4088-0CF1-9650") (frameset--mini t . t) (height . 36) (width . 79) (modeline . t) (minibuffer . t) (unsplittable) (left . 894) (top . 194) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "appmbp") (explicit-name . t) (tool-bar-position . top)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 64) (min-pixel-width . 70) (min-pixel-height-ignore . 30) (min-pixel-width-ignore . 38) (min-pixel-height-safe . 16) (min-pixel-width-safe . 14)) leaf (pixel-width . 577) (pixel-height . 490) (total-width . 82) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (buffer " *empty*" (selected) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("agg" "aggresssive" "aggressive" "agg" "company" "magit" "company" ")" "(" "-" "(" "-" "(" "-" ")" "("))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/aggressive-indent-20180626.1721/aggressive-indent-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/company-20180704.701/company-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/expand-region-20180625.939/expand-region-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/helm-20180707.531/helm-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/helm-core-20180706.946/helm-core-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/hydra-20180703.802/hydra-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/ido-completing-read+-20180627.1944/ido-completing-read+-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/ivy-20180705.807/ivy-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/magit-20180630.1235/magit-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/magit-popup-20180618.1602/magit-popup-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-20180702/org-loaddefs.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-20180702/org-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-20180702/org-loaddefs.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-20180702/org-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-plus-contrib-20180702/org-loaddefs.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-plus-contrib-20180702/org-plus-contrib-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-plus-contrib-20180702/org-loaddefs.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-plus-contrib-20180702/org-plus-contrib-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/org-ref-20180706.614/org-ref-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/smartparens-20180705.801/smartparens-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-20180620.1750/yasnippet-autoloads.el" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Downloads/Gardiner/Bach, Johann Sebastian - Johannes-Passion (BWV 245) - John Eliot Gardiner - The Monteverdi Choir.cue" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/GIT/Internship/Readme.org" "~/Downloads/Gardiner/Bach, Johann Sebastian - Johannes-Passion (BWV 245) - John Eliot Gardiner - The Monteverdi Choir..cue" "~/GIT/Internship/Readme.tex" "~/GIT/Internship/Readme.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "/Users/app/GIT/Internship/pla.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Documents/Cambridge/Reports/Physics 2017/fractional-charge.tex" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "/Users/app/GIT/Internship/src/Boost_crs.cpp" "~/GIT/Internship/Makefile" "/Users/app/GIT/Internship/CMakeLists.txt" "/Users/app/GIT/Internship/src/Boost_Dijkstra_SSSP.cpp" "~/GIT/Internship/src/Boost_crs.cpp" "/Users/app/GIT/Internship/src/Boost_graphviz_input.cpp" "~/GIT/Internship/src/Boost_crs.cpp" "/Users/app/GIT/Internship/figs/dijkstra-eg.dot" "~/GIT/ligra/apps/Makefile" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/GIT/Internship/Readme.org" "~/GIT/Internship/" "~/GIT/Internship/Readme.org" "~/GIT/Internship/" "~/GIT/Internship/Readme.org" "~/Dropbox/org-notes/todo.org" "~/GIT/Internship/Readme.org" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/GIT/Internship/Readme.org" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/GIT/Internship/Readme.org" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "/Users/app/GIT/Internship/.gitignore" "~/GIT/Internship/src/Boost_trial.cpp" "~/GIT/Internship/web-graph.dot" "/Users/app/GIT/Internship/CMakeLists.txt" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cout" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/snippet-mode/conditional_std" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/c++-mode/ofstream" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/ostream" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/c-lang-common/bulk-assign" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/c++-mode/pair" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c-lang-common/typedef" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/c++-mode/string" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cout" "/Users/app/GIT/Internship/.gitignore" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/GIT/Internship/ADynamicSP/readme.org" "~/Dropbox/org-notes/todo.org" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/fre" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cin" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/fre" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/std_colon" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/GIT/Internship/src/Boost_trial.cpp" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/GIT/Internship/CMakeLists.txt" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/GIT/Internship/Boost_trial.cpp" "~/Dropbox/org-notes/todo.org" "~/GIT/Internship/Boost_trial.cpp" "/Users/app/GIT/Internship/Boost_trial" "~/Dropbox/org-notes/todo.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/GIT/File Name Unclutter/test.pl" "/Users/app/.ssh/config" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/calibre/save_to_disk.py" "~/GIT/bash/filename cleanup/fnc.sh" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Documents/Cambridge/Lecture Materials/QCMP Lecture 1 2017-8.pdf" "~/Downloads/handouts-2/" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Downloads/handouts/" "~/Dropbox/org-notes/todo.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/snippets/prog-mode/shebang" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cerr" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/ajf" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/acl" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cin" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cout" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cin" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/class11" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/class" "~/Library/Preferences/Aquamacs Emacs/Packages/elpa/yasnippet-snippets-20180616.1005/snippets/c++-mode/cout" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org" "~/Library/Preferences/Aquamacs Emacs/Packages/ido.last" "~/Library/Preferences/Aquamacs Emacs/Packages/config.org"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/app/Library/Application Support/Aquamacs Emacs/scratch buffer"
  "*scratch*"
  'text-mode
  '(visual-line-mode override-global-mode yas-minor-mode smartparens-mode flycheck-mode linum-mode flyspell-mode)
  1
  '(1 nil)
  nil
  nil
  nil
  '((mark-ring (1))))

